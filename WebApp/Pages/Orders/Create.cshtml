@page
@using Domain
@model WebApp.Pages.Orders.CreateModel

@{
    ViewData["Title"] = "Create";
}

<h1>@Model.Client!.FirstName's order</h1>

<hr />
<div class="row">
    <table class="table">
        <thead>
        <tr>
            <th>
                @("Name")
            </th>
            <th>
                @("Description")
            </th>
            <th>
                @("Price (€)")
            </th>
            <th>
                @("Category")
            </th>
            <th>
                @("Extras")
            </th>
            <th>
                @("Actions")
            </th>
        </tr>
        </thead>
        <tbody>
        @if (Model.ActiveOrders.Count > 0)
        {
            @foreach (var order in Model.ActiveOrders)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => order.Pizza!.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => order.Pizza!.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => order.Pizza!.Price)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => order.Pizza!.Category!.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => order.OrderExtras!.Count)
                    </td>
                    <td>
                        <a asp-page="/OrderExtras/Create" asp-route-pizzaId="@Model.Pizza.Id"
                           asp-route-orderId="@order.Id"
                           asp-route-clientId="@order.Client!.Id">Add extra toppings</a> |
                        <a asp-page="./Details" asp-route-clientId="@Model.Client!.Id" asp-route-pizzaId="@order.Pizza!.Id" asp-route-orderId="@order.Id">Details</a> |
                        <a asp-page="./Delete" asp-route-clientId="@Model.Client!.Id" asp-route-pizzaId="@order.Pizza!.Id" asp-route-orderId="@order.Id">Remove from Order</a>
                    </td>
                </tr>
            }
        }
        </tbody>
    </table>
</div>

<div class="row">
    <dt class="col-sm-2">
        Total: @Model.TotalPrice €
    </dt>
</div>
<div>
    <form method="post">
        <div class="form-group">
            <input type="hidden" name="clientId" asp-for="Client!.Id"/>
            <input type="hidden" name="pizzaId" asp-for="Pizza!.Id"/>
            <input type="submit" asp-for="Btn" value="Confirm" class="btn btn-primary"/>
        </div>
        <div class="form-group">
            <input type="hidden" name="clientId" asp-for="Client!.Id"/>
            <input type="hidden" name="pizzaId" asp-for="Pizza!.Id"/>
            <input type="submit" asp-for="Btn" value="Add another pizza" class="btn btn-primary"/>
        </div>
    </form>
    <a asp-page="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
